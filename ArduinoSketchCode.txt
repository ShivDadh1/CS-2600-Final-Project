#include <WiFi.h>
#include <PubSubClient.h>

// WiFi
const char *ssid = "SpectrumSetup-00"; // Enter your WiFi name
const char *password = "dustyzoo964";  // Enter WiFi password

// MQTT Broker
const char *mqtt_broker = "test.mosquitto.org";
const char *topic = "esp32/test";
const char *mqtt_username = "emqx";
const char *mqtt_password = "123456789";
const int mqtt_port = 1883;

WiFiClient espClient;
PubSubClient client(espClient);

long randomNum;  // initialize random number

void setup() {
 // Set software serial baud to 115200;
 Serial.begin(115200);
 // connecting to a WiFi network
 WiFi.begin(ssid, password);
 while (WiFi.status() != WL_CONNECTED) {
     delay(500);
     Serial.println("Connecting to WiFi..");
 }
 Serial.println("Connected to the WiFi network");
 //connecting to a mqtt broker
 client.setServer(mqtt_broker, mqtt_port);
 client.setCallback(callback);
 while (!client.connected()) {
     String client_id = "esp32-client-";
     client_id += String(WiFi.macAddress());
     Serial.printf("The client %s connects to the public mqtt broker\n", client_id.c_str());
     if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) {
         Serial.println("Public emqx mqtt broker connected");
     } else {
         Serial.print("failed with state ");
         Serial.print(client.state());
         delay(2000);
     }
 }
 // publish and subscribe
 client.publish(topic, "Hi EMQX I'm ESP32 ^^");
 client.subscribe(topic);
 pinMode(5, OUTPUT);   // output pin LED BLUE
 pinMode(4, OUTPUT);   // output pin LED YELLOW
 pinMode(15, OUTPUT);  // output pin LED GREEN
}

void callback(char *topic, byte *payload, unsigned int length) {
 Serial.print("Message arrived in topic: ");
 Serial.println(topic);
 Serial.print("Message:");
 for (int i = 0; i < length; i++) {
     Serial.print((char) payload[i]);
 }
 Serial.println();
 Serial.println("-----------------------");
}

void loop() {
 client.loop();
 randomNum = random(0, 30); // Generate random number from range 0-30
 Serial.println(randomNum);
 if(randomNum < 10)         // if random number is less than 10, turn BLUE LED ON
 {
  digitalWrite(5, HIGH);
  delay(3000);
  digitalWrite(5, LOW);
  delay(3000);
 }
 if(randomNum > 10 && randomNum < 21) // if random number is greater than 10 and less than 21, turn YELLOW LED ON
 {
   digitalWrite(4, HIGH);
   delay(3000);
   digitalWrite(5, LOW);
   delay(3000);  
  
 }
 if(randomNum > 21) // if random number is greater than 21, turn GREEN LED ON
 {
  digitalWrite(15, HIGH);
  delay(3000);
  digitalWrite(5, LOW);
  delay(3000); 
 }
 digitalWrite(5, LOW);      // Reset BLUE LED, turn OFF
 digitalWrite(4, LOW);      // Reset YELLOW LED, turn OFF
 digitalWrite(15, LOW);     // Reset GREEN LED, turn OFF
 delay(3000);
}